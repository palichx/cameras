# Build stage - simplified version that copies everything first
FROM node:20-alpine AS build

WORKDIR /app

# Copy everything
COPY . .

# Verify yarn.lock exists
RUN ls -la yarn.lock || echo "yarn.lock not found!"

# Install dependencies (flexible)
RUN yarn install --frozen-lockfile 2>/dev/null || yarn install

# Build the application
RUN yarn build

# Production stage
FROM nginx:alpine

# Copy custom nginx config
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy built files from build stage
COPY --from=build /app/build /usr/share/nginx/html

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
